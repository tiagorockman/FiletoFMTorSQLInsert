@model FILEtoFMT.Models.SqlGenerator

@{
    ViewData["Title"] = "Gerador SQL";
}

<h1>Gerador SQL</h1>

<h4>Configurações</h4>
<hr />
<div class="row">
    <div class="col-md-8">
        <div class="spinner" style="display:none">
            <div class="center-div">
                <div class="inner-div">
                    <div class="loader"></div>
                </div>
            </div>
        </div>
        <form enctype="multipart/form-data" asp-action="SqlGenerate">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group row">
                <div class="col-sm-4">
                    <label class="form-check-label">
                        <input class="form-check-input" onchange="createTableChecked(event)" asp-for="GenerateCreateTable" /> @Html.DisplayNameFor(model => model.GenerateCreateTable)
                    </label>
                </div>
                <div class="col-sm-4">
                    <label class="form-check-label">
                        <input class="form-check-input" onchange="hasHeaderChecked(event)" asp-for="HasHeader" /> @Html.DisplayNameFor(model => model.HasHeader)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="csvFile" class="control-label"></label>
                <input asp-for="csvFile" type="file" class="form-control" />
                <span asp-validation-for="csvFile" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-md-4">
                    <label asp-for="delimiter" class="control-label"></label>
                    <input asp-for="delimiter" class="form-control" />
                    <span asp-validation-for="delimiter" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Gerar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>


<div class="control-label">
    @if (TempData.Peek("Confirmacao") != null)
    {
        <h6 class="alert alert-success">@TempData.Peek("Confirmacao")</h6>
        <script>
            closeModal();
        </script>
    }
</div>

<div class="control-label">
    @if (TempData.Peek("Caminho") != null)
    {
        <h6 class="alert alert-success">@TempData.Peek("Caminho")</h6>
        <script>
            closeModal();
        </script>
    }
</div>

<div class="control-label">
    @if (TempData.Peek("Erro") != null)
    {
        <h6 class="alert alert-danger">@TempData.Peek("Erro")</h6>
        <script>
            closeModal();
        </script>
    }
</div>


<div class="control-label">
    @if (TempData.Peek("ParcialErrors") != null)
    {
        <h6 class="alert alert-danger">@TempData.Peek("ParcialErrors")</h6>
        <script>
            closeModal();
        </script>
    }
</div>

<div class="control-label">
    @if (TempData.Peek("CaminhoParcialErros") != null)
    {
        <h6 class="alert alert-danger">@TempData.Peek("CaminhoParcialErros")</h6>
        <script>
            closeModal();
        </script>
    }
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <style>
        .center-div {
            width: 300px;
            height: 300px;
            position: absolute;
            left: 50%;
            top: 50%;
            margin-left: -150px;
            margin-top: -150px;
        }

        .spinner {
            position: fixed;
            z-index: 999;
            height: 100%;
            width: 100%;
            top: 0;
            left: 0;
            background-color: Black;
            filter: alpha(opacity=60);
            opacity: 0.6;
            -moz-opacity: 0.8;
        }

        .loader {
            margin: auto;
            border: 16px solid #f3f3f3;
            border-radius: 50%;
            border-top: 16px solid #15a0ec;
            border-bottom: 16px solid #15a0ec;
            width: 120px;
            height: 120px;
            -webkit-animation: spin 2s linear infinite;
            animation: spin 2s linear infinite;
        }

        .inner-div {
            background-color: white;
            border-radius: 15px;
            margin: auto;
            padding: 2%;
            width: 150px;
        }

        @@-webkit-keyframes spin {
            0% {
                -webkit-transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
            }
        }

        @@keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }
    </style>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {

            function closeModal() {
                $('.spinner').css('display', 'none');
            }

            $('#btnSubmit').click(function () {
                $('.spinner').css('display', 'block');
            });
        });
    </script>

    <script>
        function createTableChecked(event) {
            $('#HasHeader')[0].checked = event.target.checked;
        }
        function hasHeaderChecked(event) {
            if ($('#GenerateCreateTable')[0].checked && !event.target.checked) {
                alert("Para realizar a criação da tabela é necessário ter cabeçalho");
                $('#HasHeader')[0].checked = true;
            }
        }
    </script>


}
